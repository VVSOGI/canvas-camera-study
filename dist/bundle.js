/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
var canvas = document.getElementById("canvas");
var view = document.getElementById("view");
var ctx = canvas.getContext("2d", {
  willReadFrequently: true
});
var viewCtx = view.getContext("2d");
var video = document.getElementById("video");
var viewpt = document.getElementById("viewpt");
ctx.beginPath();
viewpt.onloadeddata = function () {
  window.viewpt = viewpt;
  viewpt.autoplay = true;
};
video.onloadeddata = function () {
  var ratio = 200;
  var width = 1440;
  var height = 720;
  requestAnimationFrame(function () {
    return render(video, width, height, ratio);
  });
  canvas.width = width + ratio * 4;
  canvas.height = height + ratio * 2;
  view.width = canvas.width;
  view.height = canvas.height;
  viewCtx.fillRect(0, 0, view.width, view.height);
  var stream = canvas.captureStream(60);
  var makeVideo = document.createElement("video");
  makeVideo.srcObject = stream;
  makeVideo.autoplay = true;
  makeVideo.setAttribute("id", "maked-video");
  // document.body.appendChild(makeVideo);
};

function render(video, videoWidth, videoHeight, ratio) {
  ctx.drawImage(video, 0, 0, videoWidth, videoHeight);
  var left = ctx.getImageData(0, 0, videoWidth / 2, videoHeight);
  var right = ctx.getImageData(videoWidth / 2, 0, videoWidth / 2, videoHeight);
  viewCtx.putImageData(right, canvas.width / 2 + ratio, ratio);
  viewCtx.putImageData(left, ratio, ratio);
  ctx.moveTo(videoWidth / 2, 0);
  ctx.lineTo(videoWidth / 2, 0);
  ctx.lineTo(videoWidth / 2, videoHeight);
  requestAnimationFrame(function () {
    return render(video, videoWidth, videoHeight, ratio);
  });
}
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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VixHQUFHLENBQUM2QixNQUFNLENBQUNQLFVBQVUsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0VBQzdCdEIsR0FBRyxDQUFDOEIsTUFBTSxDQUFDUixVQUFVLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztFQUM3QnRCLEdBQUcsQ0FBQzhCLE1BQU0sQ0FBQ1IsVUFBVSxHQUFHLENBQUMsRUFBRUMsV0FBVyxDQUFDO0VBRXZDVixxQkFBcUIsQ0FBQztJQUFNLGFBQU0sQ0FBQ1QsS0FBSyxFQUFFa0IsVUFBVSxFQUFFQyxXQUFXLEVBQUViLEtBQUssQ0FBQztFQUE3QyxDQUE2QyxDQUFDO0FBQzVFLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYW52YXMvLi9zcmMvYXBwLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2FudmFzXCIpIGFzIEhUTUxDYW52YXNFbGVtZW50O1xuY29uc3QgdmlldyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidmlld1wiKSBhcyBIVE1MQ2FudmFzRWxlbWVudDtcblxuY29uc3QgY3R4ID0gY2FudmFzLmdldENvbnRleHQoXCIyZFwiLCB7XG4gIHdpbGxSZWFkRnJlcXVlbnRseTogdHJ1ZSxcbn0pO1xuY29uc3Qgdmlld0N0eCA9IHZpZXcuZ2V0Q29udGV4dChcIjJkXCIpO1xuXG5jb25zdCB2aWRlbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidmlkZW9cIikgYXMgSFRNTFZpZGVvRWxlbWVudDtcbmNvbnN0IHZpZXdwdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidmlld3B0XCIpIGFzIEhUTUxWaWRlb0VsZW1lbnQ7XG5cbmN0eC5iZWdpblBhdGgoKTtcblxudmlld3B0Lm9ubG9hZGVkZGF0YSA9ICgpID0+IHtcbiAgKHdpbmRvdyBhcyBhbnkpLnZpZXdwdCA9IHZpZXdwdDtcbiAgdmlld3B0LmF1dG9wbGF5ID0gdHJ1ZTtcbn07XG5cbnZpZGVvLm9ubG9hZGVkZGF0YSA9ICgpID0+IHtcbiAgY29uc3QgcmF0aW8gPSAyMDA7XG4gIGNvbnN0IHdpZHRoID0gMTQ0MDtcbiAgY29uc3QgaGVpZ2h0ID0gNzIwO1xuICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4gcmVuZGVyKHZpZGVvLCB3aWR0aCwgaGVpZ2h0LCByYXRpbykpO1xuICBjYW52YXMud2lkdGggPSB3aWR0aCArIHJhdGlvICogNDtcbiAgY2FudmFzLmhlaWdodCA9IGhlaWdodCArIHJhdGlvICogMjtcbiAgdmlldy53aWR0aCA9IGNhbnZhcy53aWR0aDtcbiAgdmlldy5oZWlnaHQgPSBjYW52YXMuaGVpZ2h0O1xuICB2aWV3Q3R4LmZpbGxSZWN0KDAsIDAsIHZpZXcud2lkdGgsIHZpZXcuaGVpZ2h0KTtcblxuICBjb25zdCBzdHJlYW0gPSBjYW52YXMuY2FwdHVyZVN0cmVhbSg2MCk7XG5cbiAgY29uc3QgbWFrZVZpZGVvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcbiAgICBcInZpZGVvXCJcbiAgKSBhcyBIVE1MRWxlbWVudCBhcyBIVE1MVmlkZW9FbGVtZW50O1xuXG4gIG1ha2VWaWRlby5zcmNPYmplY3QgPSBzdHJlYW07XG4gIG1ha2VWaWRlby5hdXRvcGxheSA9IHRydWU7XG4gIG1ha2VWaWRlby5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcIm1ha2VkLXZpZGVvXCIpO1xuXG4gIC8vIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobWFrZVZpZGVvKTtcbn07XG5cbmZ1bmN0aW9uIHJlbmRlcihcbiAgdmlkZW86IEhUTUxWaWRlb0VsZW1lbnQsXG4gIHZpZGVvV2lkdGg6IG51bWJlcixcbiAgdmlkZW9IZWlnaHQ6IG51bWJlcixcbiAgcmF0aW86IG51bWJlclxuKSB7XG4gIGN0eC5kcmF3SW1hZ2UodmlkZW8sIDAsIDAsIHZpZGVvV2lkdGgsIHZpZGVvSGVpZ2h0KTtcbiAgY29uc3QgbGVmdCA9IGN0eC5nZXRJbWFnZURhdGEoMCwgMCwgdmlkZW9XaWR0aCAvIDIsIHZpZGVvSGVpZ2h0KTtcbiAgY29uc3QgcmlnaHQgPSBjdHguZ2V0SW1hZ2VEYXRhKFxuICAgIHZpZGVvV2lkdGggLyAyLFxuICAgIDAsXG4gICAgdmlkZW9XaWR0aCAvIDIsXG4gICAgdmlkZW9IZWlnaHRcbiAgKTtcbiAgdmlld0N0eC5wdXRJbWFnZURhdGEocmlnaHQsIGNhbnZhcy53aWR0aCAvIDIgKyByYXRpbywgcmF0aW8pO1xuICB2aWV3Q3R4LnB1dEltYWdlRGF0YShsZWZ0LCByYXRpbywgcmF0aW8pO1xuXG4gIGN0eC5tb3ZlVG8odmlkZW9XaWR0aCAvIDIsIDApO1xuICBjdHgubGluZVRvKHZpZGVvV2lkdGggLyAyLCAwKTtcbiAgY3R4LmxpbmVUbyh2aWRlb1dpZHRoIC8gMiwgdmlkZW9IZWlnaHQpO1xuXG4gIHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiByZW5kZXIodmlkZW8sIHZpZGVvV2lkdGgsIHZpZGVvSGVpZ2h0LCByYXRpbykpO1xufVxuIl0sIm5hbWVzIjpbImNhbnZhcyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJ2aWV3IiwiY3R4IiwiZ2V0Q29udGV4dCIsIndpbGxSZWFkRnJlcXVlbnRseSIsInZpZXdDdHgiLCJ2aWRlbyIsInZpZXdwdCIsImJlZ2luUGF0aCIsIm9ubG9hZGVkZGF0YSIsIndpbmRvdyIsImF1dG9wbGF5IiwicmF0aW8iLCJ3aWR0aCIsImhlaWdodCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImZpbGxSZWN0Iiwic3RyZWFtIiwiY2FwdHVyZVN0cmVhbSIsIm1ha2VWaWRlbyIsImNyZWF0ZUVsZW1lbnQiLCJzcmNPYmplY3QiLCJzZXRBdHRyaWJ1dGUiLCJyZW5kZXIiLCJ2aWRlb1dpZHRoIiwidmlkZW9IZWlnaHQiLCJkcmF3SW1hZ2UiLCJsZWZ0IiwiZ2V0SW1hZ2VEYXRhIiwicmlnaHQiLCJwdXRJbWFnZURhdGEiLCJtb3ZlVG8iLCJsaW5lVG8iXSwic291cmNlUm9vdCI6IiJ9